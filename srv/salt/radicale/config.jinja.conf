# -*- mode: conf -*-
# vim:ft=cfg

[server]
# CalDAV server hostnames separated by a comma
# IPv4 syntax: address:port
# IPv6 syntax: [address]:port
# For example: 0.0.0.0:9999, [::]:9999
# IPv6 adresses are configured to only allow IPv6 connections
hosts = {{bindip}}:{{bindport}}

# Daemon flag
daemon = True

# File storing the PID in daemon mode
pid = /run/radicale/radicale.pid

# SSL flags, (haproxy terminates SSL for us)
ssl = False
#certificate = /etc/apache2/ssl/server.crt  # SSL certificate path
#key = /etc/apache2/ssl/server.key  # SSL private key
#protocol = PROTOCOL_SSLv23  # SSL Protocol used. See python's ssl module for available values
#ciphers =  # Ciphers available. See python's ssl module for available ciphers

# Reverse DNS to resolve client address in logs
dns_lookup = False

# Root URL of Radicale (starting and ending with a slash)
base_prefix = /

# Possibility to allow URLs cleaned by a HTTP server, without the base_prefix
#can_skip_base_prefix = False

# Message displayed in the client when a password is needed
#realm = Radicale - Password Required

[encoding]
# Encoding for responding requests
request = utf-8

# Encoding for storing local collections
stock = utf-8


[well-known]
# Path where /.well-known/caldav/ is redirected
caldav = '/%(user)s/caldav/'

# Path where /.well-known/carddav/ is redirected
carddav = '/%(user)s/carddav/'


[auth]
# Authentication method
# Value: None | htpasswd | IMAP | LDAP | PAM | courier | http | remote_user | custom
type = IMAP

# IMAP Configuration
imap_hostname = {{imap_host}}
imap_port = 143
imap_ssl = True


[git]
# Git default options
#committer = Radicale <radicale@example.com>


[rights]
# Rights backend
# Value: None | authenticated | owner_only | owner_write | from_file | custom
type = from_file

# Custom rights handler
#custom_handler =

# File for rights management from_file
file = /etc/radicale/rights


[storage]
# Storage backend
# -------
# WARNING: ONLY "filesystem" IS DOCUMENTED AND TESTED,
#          OTHER BACKENDS ARE NOT READY FOR PRODUCTION.
# -------
# Value: filesystem | multifilesystem | database | custom
type = filesystem

# Custom storage handler
#custom_handler =

# Folder for storing local collections, created if not present
filesystem_folder = {{storage_path}}

# Database URL for SQLAlchemy
# dialect+driver://user:password@host/dbname[?key=value..]
# For example: sqlite:///var/db/radicale.db, postgresql://user:password@localhost/radicale
# See http://docs.sqlalchemy.org/en/rel_0_8/core/engines.html#sqlalchemy.create_engine
#database_url =


[logging]
# Logging configuration file
# If no config is given, simple information is printed on the standard output
# For more information about the syntax of the configuration file, see:
# http://docs.python.org/library/logging.config.html
#config = /etc/radicale/logging
# Set the default logging level to debug
#debug = False
# Store all environment variables (including those set in the shell)
#full_environment = False


[headers]
# Additional HTTP headers
#Access-Control-Allow-Origin = *
