
DefineExternalAuth mn-authclient-{{servername}} pipe \
    "/usr/local/bin/mn-authclient.py -u https://{{auth_url}}/checkpassword/ \
        -m authext --ca-file /etc/ssl/certs/ca-certificates.crt"

DefineExternalGroup mn-authclient-{{servername}}-group pipe \
    "/usr/local/bin/mn-authclient.py -u https://{{auth_url}}/checkpassword/ \
        -m authextgroup --ca-file /etc/ssl/certs/ca-certificates.crt"

<VirtualHost {{ip}}:{{port}}>
    SSLEngine On
    SSLCertificateFile {{cert}}
    SSLCertificateKeyFile {{certkey}}
    ServerName {{servername}}

    DocumentRoot /secure/webdav/{{site}}/{{folder}}
    ErrorLog /secure/webdav/{{site}}/logs/error_log.webdav
    CustomLog /secure/webdav/{{site}}/logs/access_log.webdav combined

    AcceptPathInfo On

    DavLockDB /secure/webdav/{{site}}/webdav.lockdb

    {% for foldername, folder in folders %}
        {% if folder.get('readonly-scopes', []) %}
            <Directory /secure/webdav/{{site}}/{{foldername}}/>
                DAV On
                DavDepthInfinity On

                # wait for OpenID connect support in django-oauth-toolkit, then use
                # libapache2-mod-auth-openidc as the auth backend
                AuthType Basic
                AuthName "{{authrealm}}"
                AuthBasicProvider external
                AuthExternal mn-authclient-{{servername}}
                Options Indexes
                <Limit HEAD GET POST OPTIONS PROPFIND>
                    require external-group {% for sc in folder.get('readonly-scopes', []) %}{{sc}} {% endfor %}
                </Limit>
                <Limit MKCOL PUT DELETE LOCK UNLOCK COPY MOVE PROPPATCH>
                    Deny from all
                </Limit>
            </Directory>
        {% endif %}

        {% if folder.get('write-scopes', []) %}
            <Directory /secure/webdav/{{site}}/{{foldername}}/>
                DAV On
                DavDepthInfinity On

                # wait for OpenID connect support in django-oauth-toolkit, then use
                # libapache2-mod-auth-openidc as the auth backend
                AuthType Basic
                AuthName "{{authrealm}}"
                AuthBasicProvider external
                AuthExternal mn-authclient-{{servername}}
                Options Indexes

                <Limit HEAD GET POST OPTIONS PROPFIND MKCOL PUT DELETE LOCK UNLOCK COPY MOVE PROPPATCH>
                    require external-group {% for sc in folder.get('write-scopes', []) %}{{sc}} {% endfor %}
                </Limit>
            </Directory>
        {% endif %}
    {% endfor %}
</VirtualHost>
