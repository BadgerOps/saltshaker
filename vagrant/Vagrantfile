# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure('2') do |config|

    $box_url = 'https://s3-eu-west-1.amazonaws.com/jdelic.eu/maurusnet-debian.box'

    $local_provision = false
    $local_provision_script = <<SCRIPT
        sh -c 'echo 192.168.56.10 fileserver.maurusnet.test  debian.saltstack.com repo.saltstack.com httpredir.debian.org >> /etc/hosts'
        sh -c 'echo deb http://fileserver.maurusnet.test/debian/ jessie main > /etc/apt/sources.list'
        wget -q -O - http://fileserver.maurusnet.test/dev_apt_signing.public.pgp | apt-key add -
        apt-get update
        sh -c 'apt-get install ca-certificates'
        sh -c 'if ! grep -q maurusnet-ca /etc/ca-certificates.conf; then echo local/maurusnet-ca.crt >> /etc/ca-certificates.conf; fi'
        sh -c 'mkdir -p /usr/share/ca-certificates/local'
        sh -c 'cat > /usr/share/ca-certificates/local/maurusnet-ca.crt <<EOF
-----BEGIN CERTIFICATE-----
MIIGJjCCBA4CAQAwDQYJKoZIhvcNAQELBQAwgdgxCzAJBgNVBAYTAkRFMQ8wDQYD
VQQHDAZNdW5pY2gxHTAbBgNVBAoMFG1hdXJ1cy5uZXR3b3JrcyBHbWJIMRswGQYD
VQQLDBJJbnRlcm5ldCBTZXJ2ZXIgQ0ExKzApBgNVBAMMIm1hdXJ1cy5uZXR3b3Jr
cyBJbnRlcm5ldCBTZXJ2ZXIgQ0ExHDAaBgkqhkiG9w0BCQEWDWNhQG1hdXJ1cy5u
ZXQxMTAvBgkqhkiG9w0BCQIMIm1hdXJ1cy5uZXR3b3JrcyBJbnRlcm5ldCBTZXJ2
ZXIgQ0EwHhcNMTUwOTExMDgzNjMwWhcNMzUwOTA2MDgzNjMwWjCB2DELMAkGA1UE
BhMCREUxDzANBgNVBAcMBk11bmljaDEdMBsGA1UECgwUbWF1cnVzLm5ldHdvcmtz
IEdtYkgxGzAZBgNVBAsMEkludGVybmV0IFNlcnZlciBDQTErMCkGA1UEAwwibWF1
cnVzLm5ldHdvcmtzIEludGVybmV0IFNlcnZlciBDQTEcMBoGCSqGSIb3DQEJARYN
Y2FAbWF1cnVzLm5ldDExMC8GCSqGSIb3DQEJAgwibWF1cnVzLm5ldHdvcmtzIElu
dGVybmV0IFNlcnZlciBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB
ALd6kb9lqTCFz8oQY6/Z0LGnLvPTJFklNYBEdKY1FKFDaX9avyKRHcN8AqGNCmBW
/h5yW8TgkpPS523LoaNi/TKrjlN7HeoYntnlYEe7NOyOgTmgEZ37lkQyNmdjhtoi
AzC1ViW3TVeC9I6nH+PgTHrPTKXjKfdfr/EIzfZ7UESgRiitLFbwX3z08ps3m6aB
8kRx1fftU3cM9X0CGY71pEv0aBhL8m/iPdzCHJrkQ3oDqsaFtpfPF6e3yurZvgz+
PIKqnCIQGSd2WleOY1LjUP3W5fvstXMCiErYPfFDKpPM1ZWD4zBN/DsOeX3+e9k/
uh8+Xb+FHYYJnR4zs7BsfwSWg/G8hC+DN6BvYSBvY5bI+BnAzFXwCD+58guPzlKR
97Z5DTHZYHnuvZi3HdqkjpYk45CpFGW8MHIHc0HbDlFWCQ2KdmcxLYbc9+g+J1Jc
8OBYgRG+Bj5YhNxeZUpljjV7GDVqFjwGg59wwnStJZhiuvMP+oRQ79TK3nAvB5P7
CO2jbQcRdRKdBGgvThZvbCkF3gLpXamGm+u/rLC4faTp3zZ87RNg5PgiwDOb2azY
SSUCVwv42IAzLChZsFTBvFegqMCY7h/P4qz5APbOBrPuJYffk626uxMcMuG90Xpa
efhqsnWEmk/ZVSZvB6E+2XARpHcH8EMrwRudUE80uvWFAgMBAAEwDQYJKoZIhvcN
AQELBQADggIBAF5N40kz6RFs3AX22ZD1SA6vfkx0ENotoZp9/npZUp+MurIfTpCr
fKTk8LZRlCRVlwZRAkmg6miqSv0UmnokwOQt6L/ai6/gbp6hm4xsZcgMdCAP4DzM
lVvstOE0ntdHC/4sMxp19m2yLz4U6tZgxOsXsfGhu7mPBa8IxWBagQwK4vGCRZyA
bpYv+LbTViKMfFxs2XjIb5ZvKOHsyxH57wafBll9XWYj/6TflkVApS4bfgT/E77V
CtSxeqABL51S5LY7+kQ5jCMudNTsgGL2ZRxDqZxNoenpYktoyiBXC+BHwO8udtLs
U75ziFxIFxiBjGIZ8uQOnb4Sh6YSDqEMm9YmDjx0DiA0fuMFX84afoNGJxOns35V
QbCmEdoujXUlt+e4j1y0Aqa0PP0KZjiEzrqW9l5OX+MaFrmsuacAWfNcbjwdsyQT
bF62riyvvDGBkFZRPGjak9fXkfnzTXxmWqiJ7RHWXxvIi3by6NJTY80TK9OWgxEL
li5zEbLih0mXXbRnYm63KlhaujnPrkjSXPo1RIi5g4sUEkxj4iBClqeeJcvQGN8X
F+dwVYXA3JwanHoTPOZ670s9+pKQtAYilAd7H2SSxzrhxZAlq6i6k13mFW44W+a+
b4I6FbJUSm7ZifmWy93M86ylLuMwUV+19NsAf5ocdpXyCeJ73zpqA/lg
-----END CERTIFICATE-----
EOF'
        sh -c 'update-ca-certificates'
SCRIPT

    config.ssh.insert_key = false
    config.ssh.forward_agent = true

    config.vm.define :master do |master|
        master.vm.provider :virtualbox do |vb|
            vb.customize ['modifyvm', :id, '--rtcuseutc', 'on']
        end

        master.vm.box = 'maurusnet-debian'
        master.vm.box_url = $box_url
        master.vm.network :private_network, ip: '192.168.56.88'
        master.vm.hostname = 'saltmaster.maurusnet.test'

        master.vm.synced_folder 'saltshaker/srv/salt', '/srv/salt'
        master.vm.synced_folder 'saltshaker/srv/salt-modules', '/srv/salt-modules'
        master.vm.synced_folder 'saltshaker/srv/pillar', '/srv/pillar'
        master.vm.synced_folder 'saltshaker/srv/reactor', '/srv/reactor'
        master.vm.synced_folder 'saltshaker/etc/salt-minion/minion.d', '/etc/salt/minion.d'
        master.vm.synced_folder 'saltshaker/etc/salt-master/master.d', '/etc/salt/master.d'

        master.vm.provision :shell do |s|
            if $local_provision
                s.inline = $local_provision_script
            else
                s.inline = ''
            end
            s.inline += <<SCRIPT
                mkdir -p /etc/salt/roles.d
                touch /etc/salt/roles.d/master
                touch /etc/salt/roles.d/vault
                touch /etc/salt/roles.d/consulserver
SCRIPT
        end

        master.vm.provision :salt do |salt|
            salt.run_highstate = true
            salt.colorize = true
            salt.log_level = 'warning'
            salt.verbose = false
            salt.no_minion = false
            salt.always_install = true
            salt.install_master = true
            salt.install_syndic = false
            salt.bootstrap_script = 'saltshaker/vagrant/bootstrap-salt.sh'
            salt.bootstrap_options = '-P -c /tmp'
            salt.master_pub = 'saltshaker/vagrant/preseed-keys/saltmaster.maurusnet.test.pub'
            salt.master_key = 'saltshaker/vagrant/preseed-keys/saltmaster.maurusnet.test.pem'
            salt.minion_pub = 'saltshaker/vagrant/preseed-keys/saltmaster.maurusnet.test.pub'
            salt.minion_key = 'saltshaker/vagrant/preseed-keys/saltmaster.maurusnet.test.pem'
            salt.seed_master = {
                'saltmaster.maurusnet.test' => salt.minion_pub,
                'test.maurusnet.test' => 'saltshaker/vagrant/preseed-keys/test.maurusnet.test.pub'
            }
        end

        # we have to restart salt-minion because the master's hostname is set in minion.d
        # on a vboxsf mount
        master.vm.provision :shell, run: 'always' do |s|
            s.inline = 'systemctl restart salt-master;'
            s.inline += 'systemctl restart salt-minion; sleep 1'
        end
    end

    config.vm.define :test do |test|
        test.vm.provider :virtualbox do |vb|
            vb.customize ['modifyvm', :id, '--rtcuseutc', 'on']
        end

        test.vm.box = 'maurusnet-debian'
        test.vm.box_url = $box_url
        test.vm.network :private_network, ip: '192.168.56.162'
        test.vm.network :private_network, ip: '192.168.56.163'
        test.vm.network :private_network, ip: '192.168.56.164'
        test.vm.hostname = 'test.maurusnet.test'

        test.vm.synced_folder 'saltshaker/etc/salt-minion/minion.d', '/etc/salt/minion.d'

        test.vm.provision :shell do |s|
            if $local_provision
                s.inline = $local_provision_script
            else
                s.inline = ''
            end
            s.inline += <<SCRIPT
                sh -c 'if ! grep -q 192.168.56.88 /etc/hosts; then echo "192.168.56.88        saltmaster.maurusnet.test" >> /etc/hosts; fi'
                mkdir -p /etc/salt/roles.d
                chown 700 /etc/salt/roles.d
                touch /etc/salt/roles.d/mail
                touch /etc/salt/roles.d/database
                touch /etc/salt/roles.d/pim
                touch /etc/salt/roles.d/dev
                touch /etc/salt/roles.d/apps
                chown 600 /etc/salt/roles.d/*
SCRIPT
        end

        test.vm.provision :salt do |salt|
            salt.run_highstate = true
            salt.colorize = true
            salt.log_level = 'warning'
            salt.verbose = true
            salt.no_minion = false
            salt.always_install = false
            salt.install_master = false
            salt.install_syndic = false
            salt.bootstrap_script = 'saltshaker/vagrant/bootstrap-salt.sh'
            salt.bootstrap_options = '-P -c /tmp'
            salt.minion_key = 'saltshaker/vagrant/preseed-keys/test.maurusnet.test.pem'
            salt.minion_pub = 'saltshaker/vagrant/preseed-keys/test.maurusnet.test.pub'
        end

        # we have to restart salt-minion because the master's hostname is set in minion.d
        # on a vboxsf mount
        test.vm.provision :shell, run: 'always' do |s|
            s.inline = 'systemctl restart salt-minion; sleep 1'
        end
    end

    # config.vm.define :dev do |dev|
        # # see https://github.com/mitchellh/vagrant/issues/912
        # dev.vm.provider :virtualbox do |vb|
            # vb.customize ['modifyvm', :id, '--rtcuseutc', 'on']
            # #vb.customize ['modifyvm', :id, '--nictype1', 'Am79C973']
            # #vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
            # #vb.gui = true
            # #vb.customize ['modifyvm', :id, '--memory', '1024']
        # end

        # # Every Vagrant virtual environment requires a box to build off of.
        # dev.vm.box = 'maurusnet-debian'

        # # The url from where the 'dev.vm.box' box will be fetched if you
        # # don't have it already.
        # dev.vm.box_url = $box_url

        # # Create a private network, which allows host-only access to the machine
        # # using a specific IP.
        # dev.vm.network :private_network, ip: '192.168.56.160'

        # # set up key forwarding for GIT
        # config.ssh.forward_agent = true
        # #config.ssh.max_tries = 150

        # dev.vm.hostname = 'dev.maurus.net.test'

        # dev.vm.provision :shell do |s|
            # s.inline = $salt_script
        # end

        # dev.vm.provision :salt do |salt|
            # salt.run_highstate = true
            # # we installed using the shell provisioner above, because
            # # bootstrap_salt.sh is broken on Debian 7
            # salt.no_minion = true
            # salt.verbose = true
            # salt.minion_config = 'z:/saltshaker/etc/salt-minion/minion'
            # salt.minion_key = 'z:/saltshaker/vagrant/preseed-keys/dev.maurus.net.pem'
            # salt.minion_pub = 'z:/saltshaker/vagrant/preseed-keys/dev.maurus.net.pub'
        # end
    # end

    # config.vm.define :db do |db|
        # db.vm.provider :virtualbox do |vb|
            # vb.customize ['modifyvm', :id, '--rtcuseutc', 'on']
        # end

        # db.vm.box = 'maurusnet-debian'
        # db.vm.box_url = $box_url
        # db.vm.network :private_network, ip: '192.168.56.161'
        # config.ssh.forward_agent = true
        # db.vm.hostname = 'db.maurusnet.internal.test'

        # db.vm.provision :shell do |s|
            # s.inline = $salt_script
        # end

        # db.vm.provision :salt do |salt|
            # salt.run_highstate = true
            # salt.no_minion = true
            # salt.minion_config = 'z:/saltshaker/etc/salt-minion/minion'
            # salt.minion_key = 'z:/saltshaker/vagrant/preseed-keys/db.maurusnet.internal.pem'
            # salt.minion_pub = 'z:/saltshaker/vagrant/preseed-keys/db.maurusnet.internal.pub'
        # end
    # end

end
